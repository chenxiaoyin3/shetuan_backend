package com.hongyu.entity;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.validation.constraints.Digits;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.grain.entity.BaseEntity;
import com.hongyu.util.Constants.AuditStatus;

/**
 * HySupplierContract generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "hy_supplier_contract")
public class HySupplierContract extends BaseEntity {

	public enum ContractStatus {
		
		/** 未提交 */
		weitijiao,
		
		/** 审核中 */
		shenhezhong,
		
		/** 未通过 */
		weitongguo,
		
		/** 未生效 */
		weishengxiao,
		
		/** 正常 */
		zhengchang,
		
		/** 冻结 */
		dongjie,
		
		/** 退出 */
		tuichu,
		
		/** 已变更 */
		yibiangeng,
	}	
	
	public enum Settle {
		
		/** 月结 */
		yuejie,
		
		/** 半月结 */
		banyuejie,
		
		/** 周结 */
		zhoujie,
		
		/** 实时结 */
		shishijie,
		
		/** t+N */
		tjiaN,
	}
	
	/** 供应商 */
	private HySupplier hySupplier;
	
	private HySupplierDeductChujing hySupplierDeductChujing;
	
	private HySupplierDeductGuonei hySupplierDeductGuonei;
	
	private HySupplierDeductQiche hySupplierDeductQiche;
	
	private HySupplierDeductPiaowu hySupplierDeductPiaowu;
	
	private HySupplierDeductQianzheng hySupplierDeductQianzheng;
	
	private HySupplierDeductRengou hySupplierDeductRengou;
	
	private HySupplierDedcutQita hySupplierDeductQita;
	
	private String contractCode;
	
	/** 合同押金 */
	@Digits(integer=10, fraction=2)
	private BigDecimal deposit;
	
	/** 合同应付押金 */
	@Digits(integer=10, fraction=2)
	private BigDecimal shouldpayDeposit;
	
	/** 合同应退还押金 */
	@Digits(integer=10, fraction=2)
	private BigDecimal returnDeposit;
	
	private String hyManager;
	
	private Date startDate;

	private Date deadDate;
	
	private Settle settle;
	
	private Integer dateN;
	
	/** 审核状态 */
	private AuditStatus auditStatus;
	
	/** 合同状态 */
	private ContractStatus contractStatus;
	
	/** 银行信息 */
	private BankList bankList;
	
	/** 负责人 */
	private HyAdmin liable;
	
	/** 创建人 */
	private HyAdmin creater;
	
	/** 原合同 */ 
	private HySupplierContract hySupplierContract;
	
	/** 原合同的ID */
	private Long pid;
	
	/** 续签合同 */ 
	private Set<HySupplierContract> hySupplierContracts = new HashSet<HySupplierContract>(0);
	
	/** 续签合同对应的变更续签的表 */ 
	private Set<XuqianEntity> xuqianEntities = new HashSet<>(0);
	
	/** 出境限制区域 */
	private Set<HyArea> chujingAreas = new HashSet<HyArea>(0);
	
	/** 国内限制区域 */
	private Set<HyArea> guoneiAreas = new HashSet<HyArea>(0);
	
	/** 汽车限制区域 */
	private Set<HyArea> qicheAreas = new HashSet<HyArea>(0);
	
	/** 流程实例ID */
	private String processId;
	
	/** 提交申请时间 */
	private Date applyTime;
	
	/** 是否返利*/
	private Boolean isRebate;
	private BigDecimal rebate;
	private BigDecimal bargainRebate;

	
	//子账号
	private List<HyAdmin> subAdmins = new ArrayList<HyAdmin>(0);
	
	@ManyToOne(fetch = FetchType.LAZY, cascade = { CascadeType.MERGE, CascadeType.PERSIST })
	@JoinColumn(name = "supplier_id", nullable = false)
	public HySupplier getHySupplier() {
		return this.hySupplier;
	}

	public void setHySupplier(HySupplier hySupplier) {
		this.hySupplier = hySupplier;
	}
	
	@JsonProperty
	@ManyToOne(fetch = FetchType.LAZY, cascade = { CascadeType.MERGE, CascadeType.PERSIST })
	@JoinColumn(name = "deduct_chujing")
	public HySupplierDeductChujing getHySupplierDeductChujing() {
		return hySupplierDeductChujing;
	}

	public void setHySupplierDeductChujing(HySupplierDeductChujing hySupplierDeductChujing) {
		this.hySupplierDeductChujing = hySupplierDeductChujing;
	}
	
	@JsonProperty
	@ManyToOne(fetch = FetchType.LAZY, cascade = { CascadeType.MERGE, CascadeType.PERSIST })
	@JoinColumn(name = "deduct_guonei")
	public HySupplierDeductGuonei getHySupplierDeductGuonei() {
		return hySupplierDeductGuonei;
	}

	public void setHySupplierDeductGuonei(HySupplierDeductGuonei hySupplierDeductGuonei) {
		this.hySupplierDeductGuonei = hySupplierDeductGuonei;
	}
	
	@JsonProperty
	@ManyToOne(fetch = FetchType.LAZY, cascade = { CascadeType.MERGE, CascadeType.PERSIST })
	@JoinColumn(name = "deduct_qiche")
	public HySupplierDeductQiche getHySupplierDeductQiche() {
		return hySupplierDeductQiche;
	}

	public void setHySupplierDeductQiche(HySupplierDeductQiche hySupplierDeductQiche) {
		this.hySupplierDeductQiche = hySupplierDeductQiche;
	}
	
	@JsonProperty
	@ManyToOne(fetch = FetchType.LAZY, cascade = { CascadeType.MERGE, CascadeType.PERSIST })
	@JoinColumn(name = "deduct_piaowu")
	public HySupplierDeductPiaowu getHySupplierDeductPiaowu() {
		return hySupplierDeductPiaowu;
	}
	
	public void setHySupplierDeductPiaowu(HySupplierDeductPiaowu hySupplierDeductPiaowu) {
		this.hySupplierDeductPiaowu = hySupplierDeductPiaowu;
	}
	
	@JsonProperty
	@ManyToOne(fetch = FetchType.LAZY, cascade = { CascadeType.MERGE, CascadeType.PERSIST })
	@JoinColumn(name = "deduct_qianzheng")
	public HySupplierDeductQianzheng getHySupplierDeductQianzheng() {
		return hySupplierDeductQianzheng;
	}

	public void setHySupplierDeductQianzheng(HySupplierDeductQianzheng hySupplierDeductQianzheng) {
		this.hySupplierDeductQianzheng = hySupplierDeductQianzheng;
	}
	
	@JsonProperty
	@ManyToOne(fetch = FetchType.LAZY, cascade = { CascadeType.MERGE, CascadeType.PERSIST })
	@JoinColumn(name = "deduct_qita")
	public HySupplierDedcutQita getHySupplierDeductQita() {
		return hySupplierDeductQita;
	}

	public void setHySupplierDeductQita(HySupplierDedcutQita hySupplierDeductQita) {
		this.hySupplierDeductQita = hySupplierDeductQita;
	}

	@JsonProperty
	@ManyToOne(fetch = FetchType.LAZY, cascade = { CascadeType.MERGE, CascadeType.PERSIST })
	@JoinColumn(name = "deduct_rengou")
	public HySupplierDeductRengou getHySupplierDeductRengou() {
		return hySupplierDeductRengou;
	}

	public void setHySupplierDeductRengou(HySupplierDeductRengou hySupplierDeductRengou) {
		this.hySupplierDeductRengou = hySupplierDeductRengou;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "pid")
	public HySupplierContract getHySupplierContract() {
		return this.hySupplierContract;
	}

	public void setHySupplierContract(HySupplierContract hySupplierContract) {
		this.hySupplierContract = hySupplierContract;
	}

	@JsonProperty
	@Column(name = "contract_code", unique = true, nullable = false)
	public String getContractCode() {
		return this.contractCode;
	}

	public void setContractCode(String contractCode) {
		this.contractCode = contractCode;
	}

	@JsonProperty
	@Column(name = "deposit", precision = 10, scale = 0)
	public BigDecimal getDeposit() {
		return this.deposit;
	}

	public void setDeposit(BigDecimal deposit) {
		this.deposit = deposit;
	}

	@JsonProperty
	@Column(name = "hy_manager")
	public String getHyManager() {
		return this.hyManager;
	}

	public void setHyManager(String hyManager) {
		this.hyManager = hyManager;
	}

	@JsonProperty
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "start_date", length = 19)
	public Date getStartDate() {
		return this.startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	@JsonProperty
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dead_date", length = 19)
	public Date getDeadDate() {
		return this.deadDate;
	}

	public void setDeadDate(Date deadDate) {
		this.deadDate = deadDate;
	}

	@JsonProperty
	@Column(name = "settle", nullable = false)
	public Settle getSettle() {
		return this.settle;
	}

	public void setSettle(Settle settle) {
		this.settle = settle;
	}

	@JsonProperty
	@Column(name = "dateN")
	public Integer getDateN() {
		return this.dateN;
	}

	public void setDateN(Integer dateN) {
		this.dateN = dateN;
	}

	@JsonProperty
	@Column(name = "audit_status")
	public AuditStatus getAuditStatus() {
		return this.auditStatus;
	}

	public void setAuditStatus(AuditStatus auditStatus) {
		this.auditStatus = auditStatus;
	}

	@JsonProperty
	@Column(name = "contract_status")
	public ContractStatus getContractStatus() {
		return this.contractStatus;
	}

	public void setContractStatus(ContractStatus contractStatus) {
		this.contractStatus = contractStatus;
	}

	@JsonProperty
	@ManyToOne(fetch = FetchType.LAZY, cascade = { CascadeType.MERGE, CascadeType.PERSIST })
	@JoinColumn(name = "bankList")
	public BankList getBankList() {
		return this.bankList;
	}

	public void setBankList(BankList bankList) {
		this.bankList = bankList;
	}
	
	//修改将原来的一个合同一个负责人，修改为一个负责人可以有多个合同，因为涉及到续签
	@JsonProperty
	@ManyToOne(fetch = FetchType.LAZY, cascade = { CascadeType.MERGE, CascadeType.PERSIST })
	@JoinColumn(name = "liable")
	public HyAdmin getLiable() {
		return this.liable;
	}

	public void setLiable(HyAdmin liable) {
		this.liable = liable;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "hySupplierContract")
	public Set<HySupplierContract> getHySupplierContracts() {
		return this.hySupplierContracts;
	}

	public void setHySupplierContracts(Set<HySupplierContract> hySupplierContracts) {
		this.hySupplierContracts = hySupplierContracts;
	}
	
	@JsonProperty
	@ManyToMany(fetch = FetchType.LAZY, cascade = { CascadeType.MERGE, CascadeType.PERSIST })
	@JoinTable(name = "hy_supplier_contract_area_chujing")
	public Set<HyArea> getChujingAreas() {
		return chujingAreas;
	}

	public void setChujingAreas(Set<HyArea> chujingAreas) {
		this.chujingAreas = chujingAreas;
	}

	@JsonProperty
	@ManyToMany(fetch = FetchType.LAZY, cascade = { CascadeType.MERGE, CascadeType.PERSIST })
	@JoinTable(name = "hy_supplier_contract_area_guonei")
	public Set<HyArea> getGuoneiAreas() {
		return guoneiAreas;
	}

	public void setGuoneiAreas(Set<HyArea> guoneiAreas) {
		this.guoneiAreas = guoneiAreas;
	}

	@JsonProperty
	@ManyToMany(fetch = FetchType.LAZY, cascade = { CascadeType.MERGE, CascadeType.PERSIST })
	@JoinTable(name = "hy_supplier_contract_area_qiche")
	public Set<HyArea> getQicheAreas() {
		return qicheAreas;
	}

	public void setQicheAreas(Set<HyArea> qicheAreas) {
		this.qicheAreas = qicheAreas;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "creater")
	public HyAdmin getCreater() {
		return creater;
	}

	public void setCreater(HyAdmin creater) {
		this.creater = creater;
	}
	
	//修改，将应付金额返回给前端
	@JsonProperty
	public BigDecimal getShouldpayDeposit() {
		return shouldpayDeposit;
	}

	public void setShouldpayDeposit(BigDecimal shouldpayDeposit) {
		this.shouldpayDeposit = shouldpayDeposit;
	}
	
	//修改，考虑续签情况下应退押金不等于合同押金，将应退金额返回
	@JsonProperty
	public BigDecimal returnDeposit() {
		return returnDeposit;
	}

	public void setReturnDeposit(BigDecimal returnDeposit) {
		this.returnDeposit = returnDeposit;
	}

	@PrePersist
	public void prePersist() {
		this.creater = this.getHySupplier().getOperator();
		if(auditStatus == null) {
			this.auditStatus = AuditStatus.unsubmitted;
		}
		if(contractStatus == null) {
			this.contractStatus = ContractStatus.weitijiao;
		}
		if(returnDeposit == null) {
			this.returnDeposit = this.getDeposit();
		}
		if(shouldpayDeposit == null) {
			this.shouldpayDeposit = this.getDeposit();
		}
	}
	
	/**
	 * 更新前操作
	 */
	@PreUpdate
	public void preUpdate() {
	
	}

	public BigDecimal getReturnDeposit() {
		return returnDeposit;
	}

	public String getProcessId() {
		return processId;
	}

	public void setProcessId(String processId) {
		this.processId = processId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "apply_time", length = 19)
	public Date getApplyTime() {
		return applyTime;
	}

	public void setApplyTime(Date applyTime) {
		this.applyTime = applyTime;
	}

	@JsonProperty
	@Column(name="is_rebate")
	public Boolean getIsRebate() {
		return isRebate;
	}

	public void setIsRebate(Boolean isRebate) {
		this.isRebate = isRebate;
	}
	
	@JsonProperty
	@Column(name="rebate")
	public BigDecimal getRebate() {
		return rebate;
	}
	public void setRebate(BigDecimal rebate) {
		this.rebate = rebate;
	}
	
	@JsonProperty
	@Column(name="bargain_rebate")
	public BigDecimal getBargainRebate() {
		return bargainRebate;
	}
	public void setBargainRebate(BigDecimal bargainRebate) {
		this.bargainRebate = bargainRebate;
	}
	
	//返回pid给前端用于判断该合同是否是新建的
	@Transient
	@JsonProperty
	public Long getPid() {
		if(hySupplierContract != null) {
			return hySupplierContract.getId();
		}
		return null;		
	}

	//修改，返回续签的实体
	@JsonProperty
	@OrderBy("id asc")
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "contractId", cascade = CascadeType.ALL, orphanRemoval = true)
	public Set<XuqianEntity> getXuqianEntities() {
		return xuqianEntities;
	}

	public void setXuqianEntities(Set<XuqianEntity> xuqianEntities) {
		this.xuqianEntities = xuqianEntities;
	}

	@JsonProperty
	@Transient
	public List<HyAdmin> getSubAdmins() {
		return subAdmins;
	}

	public void setSubAdmins(List<HyAdmin> subAdmins) {
		this.subAdmins = subAdmins;
	}

}
