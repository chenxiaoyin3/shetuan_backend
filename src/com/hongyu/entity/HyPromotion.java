package com.hongyu.entity;
// default package
// Generated 2018-1-27 10:11:06 by Hibernate Tools 3.6.0.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.PrePersist;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.format.annotation.DateTimeFormat.ISO;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * HyPromotion generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@JsonIgnoreProperties({"hibernateLazyInitializer", "handler"
						})
@Table(name = "hy_promotion")
public class HyPromotion implements java.io.Serializable {

	public enum PromotionType {
		普通优惠,
		组合优惠
	}
	
	public enum PromotionRule {
		满减,
		满赠,
		满折
	}
	
	public enum PromotionStatus {
		已取消,
		未开始,
		进行中,
		已结束
	}
	private Long id;
	private String promotionName;
	private PromotionType promotionType;
	private PromotionRule promotionRule;
	private Date promotionStarttime;
	private Date promotionEndtime;
	private PromotionStatus status;
	private String introduction;
	private String content;
	private Integer orders;
	private Boolean couponAvailable;
	private Date createTime;
	private HyAdmin creator;
	private Date deadTime;
	private Boolean isBanner;

	@Column(name = "divide_money")
	public BigDecimal getDivideMoney() {
		return divideMoney;
	}

	public void setDivideMoney(BigDecimal divideMoney) {
		this.divideMoney = divideMoney;
	}

	private BigDecimal divideMoney;

	@Column(name = "sync_tagpic")
	public Boolean getSyncTagpic() {
		return syncTagpic;
	}

	public void setSyncTagpic(Boolean syncTagpic) {
		this.syncTagpic = syncTagpic;
	}

	@Column(name = "sync_contpic")
	public Boolean getSyncContpic() {
		return syncContpic;
	}

	public void setSyncContpic(Boolean syncContpic) {
		this.syncContpic = syncContpic;
	}

	private Boolean syncTagpic;
	private Boolean syncContpic;

	private Set<HyPromotionPic> hyPromotionPics = new HashSet<HyPromotionPic>(0);
	private Set<HySingleitemPromotion> hySingleitemPromotions = new HashSet<HySingleitemPromotion>(0);
	private Set<HyGroupitemPromotion> hyGroupitemPromotions = new HashSet<HyGroupitemPromotion>(0);
	private Set<HyFullPresent> hyFullPresents = new HashSet<HyFullPresent>(0);
	private Set<HyFullDiscount> hyFullDiscounts = new HashSet<HyFullDiscount>(0);
	private Set<HyFullSubstract> hyFullSubstracts = new HashSet<HyFullSubstract>(0);

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ID", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getPromotionName() {
		return promotionName;
	}

	public void setPromotionName(String promotionName) {
		this.promotionName = promotionName;
	}

	@Column(name = "promotion_type")
	public PromotionType getPromotionType() {
		return this.promotionType;
	}

	public void setPromotionType(PromotionType promotionType) {
		this.promotionType = promotionType;
	}

	@Column(name = "promotion_rule")
	public PromotionRule getPromotionRule() {
		return this.promotionRule;
	}

	public void setPromotionRule(PromotionRule promotionRule) {
		this.promotionRule = promotionRule;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "promotion_starttime", length = 19)
	@DateTimeFormat(iso=ISO.DATE_TIME)
	public Date getPromotionStarttime() {
		return this.promotionStarttime;
	}

	public void setPromotionStarttime(Date promotionStarttime) {
		this.promotionStarttime = promotionStarttime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "promotion_endtime", length = 19)
	@DateTimeFormat(iso=ISO.DATE_TIME)
	public Date getPromotionEndtime() {
		return this.promotionEndtime;
	}

	public void setPromotionEndtime(Date promotionEndtime) {
		this.promotionEndtime = promotionEndtime;
	}

	@Column(name = "status")
	public PromotionStatus getStatus() {
		return this.status;
	}

	public void setStatus(PromotionStatus status) {
		this.status = status;
	}

	@Column(name = "introduction")
	public String getIntroduction() {
		return this.introduction;
	}

	public void setIntroduction(String introduction) {
		this.introduction = introduction;
	}

	@Column(name = "orders")
	public Integer getOrders() {
		return this.orders;
	}

	public void setOrders(Integer orders) {
		this.orders = orders;
	}

	@Column(name = "coupon_available")
	public Boolean getCouponAvailable() {
		return this.couponAvailable;
	}

	public void setCouponAvailable(Boolean couponAvailable) {
		this.couponAvailable = couponAvailable;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_time", length = 19)
	public Date getCreateTime() {
		return this.createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	@JsonIgnore
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "creator")
	public HyAdmin getCreator() {
		return this.creator;
	}

	public void setCreator(HyAdmin creator) {
		this.creator = creator;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dead_time", length = 19)
	public Date getDeadTime() {
		return this.deadTime;
	}

	public void setDeadTime(Date deadTime) {
		this.deadTime = deadTime;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "hyPromotion", cascade={CascadeType.PERSIST,CascadeType.MERGE}, orphanRemoval=true)
	public Set<HyPromotionPic> getHyPromotionPics() {
		return this.hyPromotionPics;
	}

	public void setHyPromotionPics(Set<HyPromotionPic> hyPromotionPics) {
		this.hyPromotionPics = hyPromotionPics;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "hyPromotion", cascade = { CascadeType.MERGE, CascadeType.PERSIST }, orphanRemoval=true)
	@JsonIgnore
	public Set<HySingleitemPromotion> getHySingleitemPromotions() {
		return this.hySingleitemPromotions;
	}

	@JsonProperty
	public void setHySingleitemPromotions(Set<HySingleitemPromotion> hySingleitemPromotions) {
		this.hySingleitemPromotions = hySingleitemPromotions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "hyPromotion", cascade = { CascadeType.MERGE, CascadeType.PERSIST }, orphanRemoval=true)
	@OrderBy("fullPresentRequirenment asc")
	public Set<HyFullPresent> getHyFullPresents() {
		return this.hyFullPresents;
	}

	public void setHyFullPresents(Set<HyFullPresent> hyFullPresents) {
		this.hyFullPresents = hyFullPresents;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "hyPromotion", cascade = { CascadeType.MERGE, CascadeType.PERSIST }, orphanRemoval=true)
	@OrderBy("discountRequirenment asc")
	public Set<HyFullDiscount> getHyFullDiscounts() {
		return this.hyFullDiscounts;
	}

	public void setHyFullDiscounts(Set<HyFullDiscount> hyFullDiscounts) {
		this.hyFullDiscounts = hyFullDiscounts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "hyPromotion", cascade = { CascadeType.MERGE, CascadeType.PERSIST }, orphanRemoval=true)
	@OrderBy("fullFreeRequirement asc")
	public Set<HyFullSubstract> getHyFullSubstracts() {
		return this.hyFullSubstracts;
	}

	public void setHyFullSubstracts(Set<HyFullSubstract> hyFullSubstracts) {
		this.hyFullSubstracts = hyFullSubstracts;
	}

	public String getContent() {
		return content;
	}

	public void setContent(String content) {
		this.content = content;
	}

	@JsonIgnore
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "promotionId", cascade = { CascadeType.MERGE, CascadeType.PERSIST }, orphanRemoval=true)
	public Set<HyGroupitemPromotion> getHyGroupitemPromotions() {
		return hyGroupitemPromotions;
	}

	@JsonProperty
	public void setHyGroupitemPromotions(Set<HyGroupitemPromotion> hyGroupitemPromotions) {
		this.hyGroupitemPromotions = hyGroupitemPromotions;
	}
	
	@PrePersist
	public void prePersist() {
		this.createTime = new Date();
		if(this.divideMoney==null){
			this.divideMoney = BigDecimal.ZERO;
		}
		if(syncContpic==null){
			syncContpic = false;
		}
		if(syncTagpic == null){
			syncTagpic = false;
		}
	}

	public Boolean getIsBanner() {
		return isBanner;
	}

	public void setIsBanner(Boolean isBanner) {
		this.isBanner = isBanner;
	}

}
