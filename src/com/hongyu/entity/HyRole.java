package com.hongyu.entity;
// Generated 2017-12-25 14:12:49 by Hibernate Tools 3.6.0.Final

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.PrePersist;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.validator.constraints.Length;
import org.hibernate.validator.constraints.NotEmpty;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.grain.entity.BaseEntity;
import org.springframework.cache.annotation.Cacheable;

/**
 * HyRole generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "hy_role")
@SequenceGenerator(name = "sequenceGenerator", sequenceName = "hy_role_sequence")
public class HyRole extends BaseEntity {
	
	/** 角色名称 */
	private String name;
	
	/** 角色描述 */
	private String description;
	
	/** 角色拥有的权限 */
	private Set<HyRoleAuthority> hyRoleAuthorities = new HashSet<HyRoleAuthority>(0);
	
	/** 角色可以分配的子角色 */
	private Set<HyRole> hyRolesForSubroles = new HashSet<HyRole>(0);
	
	/** 角色的父角色 */
	private Set<HyRole> hyRolesForRoles = new HashSet<HyRole>(0);
	
	/** 管理员 */
	private Set<HyAdmin> hyAdmins = new HashSet<HyAdmin>(0);
	
	/** 拥有的权限资源 */
	private String resourceIds;
	
	/** 取消状态 */
	private Boolean status;
	@JsonProperty
	@NotEmpty
	@Length(max = 200)
	@Column(name = "name", nullable = false, unique = true)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@JsonProperty
	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "roles")
	@OrderBy("id asc")
    //@Cacheable("hyRole")
	public Set<HyRoleAuthority> getHyRoleAuthorities() {
		return this.hyRoleAuthorities;
	}

	public void setHyRoleAuthorities(Set<HyRoleAuthority> hyRoleAuthorities) {
		this.hyRoleAuthorities = hyRoleAuthorities;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "hy_roles_subroles",  joinColumns = {
			@JoinColumn(name = "roles", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "subroles", nullable = false, updatable = false) })
	public Set<HyRole> getHyRolesForSubroles() {
		return this.hyRolesForSubroles;
	}

	public void setHyRolesForSubroles(Set<HyRole> hyRolesForSubroles) {
		this.hyRolesForSubroles = hyRolesForSubroles;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "hy_roles_subroles",joinColumns = {
			@JoinColumn(name = "subroles", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "roles", nullable = false, updatable = false) })
	public Set<HyRole> getHyRolesForRoles() {
		return this.hyRolesForRoles;
	}

	public void setHyRolesForRoles(Set<HyRole> hyRolesForRoles) {
		this.hyRolesForRoles = hyRolesForRoles;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "role")
	public Set<HyAdmin> getHyAdmins() {
		return hyAdmins;
	}

	public void setHyAdmins(Set<HyAdmin> hyAdmins) {
		this.hyAdmins = hyAdmins;
	}

	@Transient
	public String getResourceIds() {
		return resourceIds;
	}

	public void setResourceIds(String resourceIds) {
		this.resourceIds = resourceIds;
	}
	
	@JsonProperty
	@Column(name = "status", nullable = false)
	public Boolean getStatus() {
		return status;
	}

	public void setStatus(Boolean status) {
		this.status = status;
	}
	
	@PrePersist
	public void prePersist(){
		this.status = true;
	}

}
