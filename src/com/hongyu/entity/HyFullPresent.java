package com.hongyu.entity;
// default package
// Generated 2018-1-27 10:11:06 by Hibernate Tools 3.6.0.Final

import java.math.BigDecimal;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * HyFullPresent generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@JsonIgnoreProperties({"hibernateLazyInitializer", "handler",
	"hyPromotion"
	})
@Table(name = "hy_full_present")
public class HyFullPresent implements java.io.Serializable {

	private Long id;
	private HyPromotion hyPromotion;
	private Specialty fullPresentProduct;
	private SpecialtySpecification fullPresentProductSpecification;
	private Integer fullPresentProductNumber;
	private BigDecimal fullPresentRequirenment;

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ID", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "promotion_id")
	public HyPromotion getHyPromotion() {
		return this.hyPromotion;
	}

	public void setHyPromotion(HyPromotion hyPromotion) {
		this.hyPromotion = hyPromotion;
	}

	@Column(name = "full_present_product_number")
	public Integer getFullPresentProductNumber() {
		return this.fullPresentProductNumber;
	}

	public void setFullPresentProductNumber(Integer fullPresentProductNumber) {
		this.fullPresentProductNumber = fullPresentProductNumber;
	}

	@Column(name = "full_present_requirenment", precision = 10)
	public BigDecimal getFullPresentRequirenment() {
		return this.fullPresentRequirenment;
	}

	public void setFullPresentRequirenment(BigDecimal fullPresentRequirenment) {
		this.fullPresentRequirenment = fullPresentRequirenment;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "full_present_product")
	public Specialty getFullPresentProduct() {
		return fullPresentProduct;
	}

	public void setFullPresentProduct(Specialty fullPresentProduct) {
		this.fullPresentProduct = fullPresentProduct;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "full_present_product_specification")
	public SpecialtySpecification getFullPresentProductSpecification() {
		return fullPresentProductSpecification;
	}

	public void setFullPresentProductSpecification(SpecialtySpecification fullPresentProductSpecification) {
		this.fullPresentProductSpecification = fullPresentProductSpecification;
	}

}
