package com.hongyu.entity;
// Generated 2017-12-11 20:56:27 by Hibernate Tools 5.2.3.Final

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.hongyu.util.Constants;

/**
 * ProfitShareConfirm generated by hbm2java
 * 分公司分成
 */
@Entity
@Table(name = "hy_profit_share_confirm")
public class ProfitShareConfirm implements java.io.Serializable {

	private Long id;
	private Integer state;
	private String confirmNum;
	private Department branch;
	private String branchName;
	private Date billingCycleStart;
	private Date billingCycleEnd;
	private Date generateDate;
	private Date confirmDate;
	private Date payDate;
	private BigDecimal amount;
	private String dismissReason;
	private BigDecimal modifyAmount;
	private String remark;
	private BankList bankList;
	private String processInstanceId;
	private Boolean isModified;
	private List<ProfitShareConfirmDetail> details = new ArrayList<>();


	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "state")
	public Integer getState() {
		return this.state;
	}

	public void setState(Integer state) {
		this.state = state;
	}

	@Column(name = "confirm_num")
	public String getConfirmNum() {
		return this.confirmNum;
	}

	public void setConfirmNum(String confirmNum) {
		this.confirmNum = confirmNum;
	}
	
	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name = "branch_id")
	public Department getBranch() {
		return branch;
	}

	public void setBranch(Department branch) {
		this.branch = branch;
	}
	
	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name = "bank_list_id")
	public BankList getBankList() {
		return bankList;
	}

	public void setBankList(BankList bankList) {
		this.bankList = bankList;
	}

	@Column(name = "branch_name")
	public String getBranchName() {
		return this.branchName;
	}

	public void setBranchName(String branchName) {
		this.branchName = branchName;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "billing_cycle_start")
	public Date getBillingCycleStart() {
		return this.billingCycleStart;
	}

	public void setBillingCycleStart(Date billingCycleStart) {
		this.billingCycleStart = billingCycleStart;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "billing_cycle_end")
	public Date getBillingCycleEnd() {
		return this.billingCycleEnd;
	}

	public void setBillingCycleEnd(Date billingCycleEnd) {
		this.billingCycleEnd = billingCycleEnd;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "generate_date")
	public Date getGenerateDate() {
		return this.generateDate;
	}

	public void setGenerateDate(Date generateDate) {
		this.generateDate = generateDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "confirm_date")
	public Date getConfirmDate() {
		return this.confirmDate;
	}

	public void setConfirmDate(Date confirmDate) {
		this.confirmDate = confirmDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "pay_date")
	public Date getPayDate() {
		return this.payDate;
	}

	public void setPayDate(Date payDate) {
		this.payDate = payDate;
	}

	@Column(name = "amount")
	public BigDecimal getAmount() {
		return this.amount;
	}

	public void setAmount(BigDecimal amount) {
		this.amount = amount;
	}

	@Column(name = "dismiss_reason")
	public String getDismissReason() {
		return this.dismissReason;
	}

	public void setDismissReason(String dismissReason) {
		this.dismissReason = dismissReason;
	}

	@Column(name = "modify_amount")
	public BigDecimal getModifyAmount() {
		return this.modifyAmount;
	}

	public void setModifyAmount(BigDecimal modifyAmount) {
		this.modifyAmount = modifyAmount;
	}

	@Column(name = "remark", nullable = false)
	public String getRemark() {
		return this.remark;
	}

	public void setRemark(String remark) {
		this.remark = remark;
	}
	
	@Column(name = "process_instance_id")
	public String getProcessInstanceId() {
		return processInstanceId;
	}

	public void setProcessInstanceId(String processInstanceId) {
		this.processInstanceId = processInstanceId;
	}
	
	@Column(name = "is_modified")
	public Boolean getIsModified() {
		return isModified;
	}

	public void setIsModified(Boolean isModified) {
		this.isModified = isModified;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "profitShareConfirmId", cascade = CascadeType.ALL, orphanRemoval = true)
	public List<ProfitShareConfirmDetail> getDetails() {
		return details;
	}

	public void setDetails(List<ProfitShareConfirmDetail> details) {
		this.details = details;
	}
	
	@PrePersist
	public void setPrepersist() {
		this.generateDate = new Date();
		this.state = Constants.PROFIT_SHARE_CONFIRM_STATUS_WAIT_FOR_CONFIRMATION;
		this.isModified = false;
	}
	
}
