package com.hongyu.entity;

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.grain.util.StringUtil;
import org.springframework.cache.annotation.Cacheable;

/**
 * HyAdmin generated by hbm2java
 */
@SuppressWarnings("serial")   
@Entity
@Table(name = "hy_admin")
@SequenceGenerator(name = "sequenceGenerator", sequenceName = "hy_admin_sequence")
@JsonIgnoreProperties(value={"hibernateLazyInitializer","handler",
		"password",
		"createDate",
		"modifyDate",
		"hyAdmin",
		"hyAdmins",
		"position",
		"isOnjob",
		"isManager",
		"isLocked",
		"loginFailureCount",
		"lockedDate",
		"loginDate",
		"loginIp",
		"liableContracts"
})
public class HyAdmin implements Serializable{

	/** 用户名 */
	private String username;
	
	/** 密码，默认为12345 */
	private String password;

	private Department department;

	private HyRole role;
	
	/** 真实姓名 */
	private String name;
	
	/** 手机号 */
	private String mobile;
	
	/** 是否启用 */
	private Boolean isEnabled;
	
	/** 创建日期 */
	private Date createDate;
	
	/** 修改日期 */
	private Date modifyDate;
	
	/** 职位 */
	private String position;
	
	/** 是否在职 */
	private Boolean isOnjob;
	
	/** 微信号 */
	private String wechat;
	
	/** 微信图片url */
	private String wechatUrl;
	
	/** QQ */
	private String qq;
	
	/** 供应商子账号所对应的合同 */
//	private HySupplierContract contract;
	
	/** 所在地址 */
	private String address;
	
	/** 汽车供应商对应的区域 */
	private Set<HyArea> areaQiche = new HashSet<HyArea>(0);
	
	/** 国内供应商对应的区域 */
	private Set<HyArea> areaGuonei = new HashSet<HyArea>(0);
	
	/** 出境供应商对应的区域 */
	private Set<HyArea> areaChujing = new HashSet<HyArea>(0);
	
	/** 是否是经理 */
	private Boolean isManager;
	
	/** 是否被锁定 */
	private Boolean isLocked;
	
	/** 登录失败次数 */
	private Integer loginFailureCount;
	
	/** 锁定日期 */
	private Date lockedDate;
	
	/** 最后一次登录日期 */
	private Date loginDate;
	
	/** 最后一次登录IP */
	private String loginIp;
	
	/** 父账号：如果该账号是供应商子账号，那么其父账号是唯一的，但是合同不是唯一的 */
	private HyAdmin hyAdmin;
	
	/** 子账号：如果该账号是供应商父账号，其子账号 */
	private Set<HyAdmin> hyAdmins = new HashSet<HyAdmin>(0);
	
	/** 负责人对应合同 */
	private Set<HySupplierContract> liableContracts = new HashSet<HySupplierContract>(0);
	
	/** 创建人：分公司创建员工账号的时候使用 */
	private HyAdmin creator;

	@Id
	@Column(name = "username", unique = true, nullable = false)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", length = 50)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "department")
	public Department getDepartment() {
		return this.department;
	}

	public void setDepartment(Department department) {
		this.department = department;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "role")
    //@Cacheable("hyAdmin")
	public HyRole getRole() {
		return this.role;
	}

	public void setRole(HyRole  role) {
		this.role = role;
	}

	@Column(name = "name", length = 60)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "mobile", length = 20)
	public String getMobile() {
		return this.mobile;
	}

	public void setMobile(String mobile) {
		this.mobile = mobile;
	}

	@Column(name = "is_enabled")
	public Boolean getIsEnabled() {
		return this.isEnabled;
	}

	public void setIsEnabled(Boolean isEnabled) {
		this.isEnabled = isEnabled;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_date", length = 19)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "modify_date", length = 19)
	public Date getModifyDate() {
		return this.modifyDate;
	}

	public void setModifyDate(Date modifyDate) {
		this.modifyDate = modifyDate;
	}

	@Column(name = "position")
	public String getPosition() {
		return this.position;
	}

	public void setPosition(String position) {
		this.position = position;
	}
	@Column(name = "is_onjob")
	public Boolean getIsOnjob() {
		return isOnjob;
	}

	public void setIsOnjob(Boolean isOnjob) {
		this.isOnjob = isOnjob;
	}

	@Column(name = "wechat", length = 50)
	public String getWechat() {
		return this.wechat;
	}

	public void setWechat(String wechat) {
		this.wechat = wechat;
	}

	@Column(name = "is_manager")
	public Boolean getIsManager() {
		return this.isManager;
	}

	public void setIsManager(Boolean isManager) {
		this.isManager = isManager;
	}

	
	public Boolean getIsLocked() {
		return isLocked;
	}

	public void setIsLocked(Boolean isLocked) {
		this.isLocked = isLocked;
	}

	public Integer getLoginFailureCount() {
		return loginFailureCount;
	}

	public void setLoginFailureCount(Integer loginFailureCount) {
		this.loginFailureCount = loginFailureCount;
	}

	public Date getLockedDate() {
		return lockedDate;
	}

	public void setLockedDate(Date lockedDate) {
		this.lockedDate = lockedDate;
	}

	public Date getLoginDate() {
		return loginDate;
	}

	public void setLoginDate(Date loginDate) {
		this.loginDate = loginDate;
	}

	public String getLoginIp() {
		return loginIp;
	}

	public void setLoginIp(String loginIp) {
		this.loginIp = loginIp;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "pID")
	public HyAdmin getHyAdmin() {
		return hyAdmin;
	}

	public void setHyAdmin(HyAdmin hyAdmin) {
		this.hyAdmin = hyAdmin;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "hyAdmin")
	public Set<HyAdmin> getHyAdmins() {
		return hyAdmins;
	}

	public void setHyAdmins(Set<HyAdmin> hyAdmins) {
		this.hyAdmins = hyAdmins;
	}
	
	public String getWechatUrl() {
		return wechatUrl;
	}

	public void setWechatUrl(String wechatUrl) {
		this.wechatUrl = wechatUrl;
	}

//	@ManyToOne(fetch = FetchType.LAZY)
//	@JoinColumn(name = "contract")
//	public HySupplierContract getContract() {
//		return contract;
//	}
//
//	public void setContract(HySupplierContract contract) {
//		this.contract = contract;
//	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "hy_supplier_admin_area_qiche")
	public Set<HyArea> getAreaQiche() {
		return areaQiche;
	}

	public void setAreaQiche(Set<HyArea> areaQiche) {
		this.areaQiche = areaQiche;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "hy_supplier_admin_area_guonei")
	public Set<HyArea> getAreaGuonei() {
		return areaGuonei;
	}

	public void setAreaGuonei(Set<HyArea> areaGuonei) {
		this.areaGuonei = areaGuonei;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "hy_supplier_admin_area_chujing")
	public Set<HyArea> getAreaChujing() {
		return areaChujing;
	}

	public void setAreaChujing(Set<HyArea> areaChujing) {
		this.areaChujing = areaChujing;
	}

	/**
	 * 持久化前处理
	 * 默认密码为12345
	 */
	@PrePersist
	public void prePersist() {
		this.createDate = new Date();
		String encryptpw = StringUtil.encodePassword("12345",
				"MD5");
		this.setPassword(encryptpw);
		if(this.getIsEnabled() == null) {
			this.setIsEnabled(true);
		}
	}
	
	/**
	 * 更新前处理
	 */
	@PreUpdate
	public void preUpdate() {
		this.modifyDate = new Date();
	}


	public String getQq() {
		return qq;
	}

	public void setQq(String qq) {
		this.qq = qq;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((createDate == null) ? 0 : createDate.hashCode());
		result = prime * result + ((mobile == null) ? 0 : mobile.hashCode());
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		result = prime * result + ((password == null) ? 0 : password.hashCode());
		result = prime * result + ((position == null) ? 0 : position.hashCode());
		result = prime * result + ((qq == null) ? 0 : qq.hashCode());
		result = prime * result + ((username == null) ? 0 : username.hashCode());
		result = prime * result + ((wechat == null) ? 0 : wechat.hashCode());
		result = prime * result + ((wechatUrl == null) ? 0 : wechatUrl.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		HyAdmin other = (HyAdmin) obj;
		if (createDate == null) {
			if (other.createDate != null)
				return false;
		} else if (!createDate.equals(other.createDate))
			return false;
		if (mobile == null) {
			if (other.mobile != null)
				return false;
		} else if (!mobile.equals(other.mobile))
			return false;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		if (password == null) {
			if (other.password != null)
				return false;
		} else if (!password.equals(other.password))
			return false;
		if (position == null) {
			if (other.position != null)
				return false;
		} else if (!position.equals(other.position))
			return false;
		if (qq == null) {
			if (other.qq != null)
				return false;
		} else if (!qq.equals(other.qq))
			return false;
		if (username == null) {
			if (other.username != null)
				return false;
		} else if (!username.equals(other.username))
			return false;
		if (wechat == null) {
			if (other.wechat != null)
				return false;
		} else if (!wechat.equals(other.wechat))
			return false;
		if (wechatUrl == null) {
			if (other.wechatUrl != null)
				return false;
		} else if (!wechatUrl.equals(other.wechatUrl))
			return false;
		return true;
	}


	public String getAddress() {
		return address;
	}

	public void setAddress(String address) {
		this.address = address;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "liable")
	public Set<HySupplierContract> getLiableContracts() {
		return liableContracts;
	}

	public void setLiableContracts(Set<HySupplierContract> liableContracts) {
		this.liableContracts = liableContracts;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "creator")
	public HyAdmin getCreator() {
		return creator;
	}

	public void setCreator(HyAdmin creator) {
		this.creator = creator;
	}

}
